---
- include: pkgs.yml
- include: authroot_georep.yml

- include: setup_aws_network.yml
  when: ansible_system == 'Linux' and location == 'aws'

  # Flush dracut changes so it doesn't get lost with an error down the line
- name: Apply change immediately
  meta: flush_handlers

- include: setup_disk_{{ location }}.yml
  when: ansible_system == 'Linux' and location

- include: setup_lvm_config.yml
  when: ansible_system == 'Linux'

- include: mock.yml
  when: ansible_os_family == 'RedHat'

- name: Deploy sudoers config for jenkins
  copy:
    dest: /{% if ansible_system == 'FreeBSD'%}usr/local/{% endif %}etc/sudoers.d/sudoers_jenkins
    src: sudoers_jenkins

# TODO /home should be 755
- name: Add jenkins user to group
  user:
    name: jenkins
    groups: /{% if ansible_os_family == 'RedHat'%}wheel,mock{% endif %}wheel

- import_tasks: setup_auth.yml
  when: location == 'aws'

- name: Start and enable rpc-statd
  service:
    name: rpc-statd
    enabled: true
    state: started
  when: location == 'aws'

#TODO add the fingerprint of review.gluster.org to user jenkins
# so it doesn't block
- name: Add builds to the PATH
  copy:
    dest: /etc/profile.d/gluster_test.sh
    content: 'export PATH="$PATH:/build/install/sbin:/build/install/bin"'
  when: ansible_system == 'Linux'

- name: Create various directories for tests
  file:
    name: "{{ item }}"
    mode: "u=rwx,g=rx,o=rx"
    owner: jenkins
    group: jenkins
    state: directory
  with_items:
  - /var/log/glusterfs
  - /var/{% if ansible_system == 'FreeBSD'%}db{% else %}lib{% endif %}/glusterd
  - /var/run/gluster
  - /d
  - /archives
  - /d/archived_builds
  - /d/backends
  - /d/build
  - /d/logs
  - /home/jenkins/root
  - /archives/archived_builds
  - /archives/log
  - /archives/logs

- name: Create directory /home/jenkins/root/workspace
  file:
    state: directory
    path: /home/jenkins/root/workspace
    recurse: yes
    follow: no
    owner: jenkins
    group: jenkins

- name: Setup permissions for /home/jenkins/root/workspace
  file:
    path: /home/jenkins/root/workspace
    recurse: yes
    follow: no
    mode: g+s
  when: ansible_system == 'Linux' and location != 'aws'

- name: Setup group acl for /home/jenkins/root/workspace
  acl:
    path: /home/jenkins/root/workspace
    entity: jenkins
    etype: group
    permissions: rwx
    recursive: yes
    default: yes
    state: present
  when: ansible_system == 'Linux' and location != 'aws'

- name: Symlink /d/build to /build
  file: src=/d/build dest=/build state=link

- name: Set selinux context for nginx
  sefcontext:
    target: "{{ item }}(/.*)?"
    setype: public_content_t
  with_items:
  - /archives
  when: ansible_system == 'Linux' and location != 'aws'

- sysctl:
    name: "{% if ansible_system == 'FreeBSD' %}kern.corefile{% else %}kernel.core_pattern{% endif %}"
    value: "/%e-%p.core"
    state: present
    reload: yes
  name: use the same naming policy for corefile than NetBSD
